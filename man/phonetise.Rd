% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phonetise.R
\name{phonetise}
\alias{phonetise}
\alias{phonetize}
\title{Tokenise IPA strings}
\usage{
phonetise(
  strings,
  multi = NULL,
  regex = NULL,
  sanitise = TRUE,
  sanitize = sanitise,
  default_multi = FALSE
)

phonetize(
  strings,
  multi = NULL,
  regex = NULL,
  sanitise = TRUE,
  sanitize = sanitise,
  default_multi = FALSE
)
}
\arguments{
\item{strings}{A character vector with a list of words in IPA.}

\item{multi}{A character vector of one or more multi-character phones as
strings.}

\item{regex}{A string with a regular expression to match several
multi-character phones.}

\item{sanitise}{Whether to remove all non-IPA characters (\code{TRUE} by default).}

\item{sanitize}{Alias of \code{sanitize}.}

\item{default_multi}{If set to \code{TRUE}, parses all valid diacritics as part of the previous character (\code{FALSE} by default).}
}
\value{
A list.
}
\description{
\code{phonetise()} tokenises strings of IPA symbols (like phonetic transcriptions
of words) into individual "phones". The output is a tibble with two columns:
\code{ipa}, the IPA strings, and \code{ipa_token}, the tokenised IPA strings as a list
column.
}
\examples{
ipa <- c("pʰãkʰ", "tʰum̥", "ɛkʰɯ")
ph <- c("pʰ", "tʰ", "kʰ", "ã", "m̥")

phonetise(ipa, multi = ph)

ph_2 <- ph[4:5]

# Match any character followed by <ʰ> with ".ʰ".
phonetise(ipa, multi = ph_2, regex = ".ʰ")

# Same result.
phonetise(ipa, regex = ".(\u0303|\u0325|\u02B0)")

ipa <- c("pʰãkʰ", "tʰum̥", "ɛkʰɯ")
ph <- c("pʰ", "tʰ", "kʰ", "ã", "m̥")

phonetise(ipa, multi = ph)

}
